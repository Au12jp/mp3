"use strict";(()=>{var p=(e,t)=>()=>(e&&(t=e(e=0)),t);var h=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var d=(e,t,o)=>new Promise((n,r)=>{var a=i=>{try{c(o.next(i))}catch(m){r(m)}},s=i=>{try{c(o.throw(i))}catch(m){r(m)}},c=i=>i.done?n(i.value):Promise.resolve(i.value).then(a,s);c((o=o.apply(e,t)).next())});var L,B,g=p(()=>{L=new Error("failed to get response body reader"),B=new Error("failed to complete download")});var f=p(()=>{});var F,y,w=p(()=>{g();f();F=e=>new Promise((t,o)=>{let n=new FileReader;n.onload=()=>{let{result:r}=n;r instanceof ArrayBuffer?t(new Uint8Array(r)):t(new Uint8Array)},n.onerror=r=>{var a,s;o(Error(`File could not be read! Code=${((s=(a=r==null?void 0:r.target)==null?void 0:a.error)==null?void 0:s.code)||-1}`))},n.readAsArrayBuffer(e)}),y=e=>d(void 0,null,function*(){let t;if(typeof e=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(e)?t=atob(e.split(",")[1]).split("").map(o=>o.charCodeAt(0)):t=yield(yield fetch(e)).arrayBuffer();else if(e instanceof URL)t=yield(yield fetch(e)).arrayBuffer();else if(e instanceof File||e instanceof Blob)t=yield F(e);else return new Uint8Array;return new Uint8Array(t)})});var T=h(R=>{w();var E=new Worker("./core-mt/worker.js"),u=document.getElementById("fileInput"),O=document.getElementById("trimButton"),I=document.getElementById("videoOutput"),b=document.getElementById("progress"),A=document.getElementById("timeRemaining");function l(e,t=[]){return new Promise((o,n)=>{E.postMessage({command:e,args:t}),E.onmessage=r=>{if(r.data.status==="error")n(r.data.message);else if(r.data.status==="progress"){let{percent:a,estimatedRemainingTime:s}=r.data;b.style.width=`${a}%`,A.innerText=`Estimated Time Left: ${s}s`}else o(r.data.result)}})}function v(){return d(this,null,function*(){try{console.log("Loading FFmpeg..."),yield l("load"),console.log("FFmpeg loaded.")}catch(e){console.error("Error loading FFmpeg:",e)}})}function D(e,t,o){return d(this,null,function*(){console.log("Sending video trimming command to worker...");let n=yield y(e),r=(parseInt(o)-parseInt(t)).toString(),a=["-i","input.mp4","-ss",t,"-t",r,"output.mp4"];yield l("writeFile",["input.mp4",n]),yield l("run",a);let s=yield l("readFile",["output.mp4"]),c=new Blob([new Uint8Array(s)],{type:"video/mp4"});return URL.createObjectURL(c)})}O.addEventListener("click",()=>d(R,null,function*(){if(!u.files||u.files.length===0){alert("Please select a video file.");return}let e=document.getElementById("start").value,t=document.getElementById("end").value;try{let o=yield D(u.files[0],e,t);I.src=o}catch(o){console.error("Error during video trimming:",o)}}));v().catch(console.error)});T();})();
//# sourceMappingURL=main.js.map
