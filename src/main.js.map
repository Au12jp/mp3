{
  "version": 3,
  "sources": ["main.ts"],
  "sourcesContent": ["// Worker\u3078\u306E\u30B3\u30DE\u30F3\u30C9\u9001\u4FE1\u3092\u7C21\u5358\u306B\u884C\u3046\u30D8\u30EB\u30D1\u30FC\u95A2\u6570\nfunction sendWorkerCommand<T = any>(\n  command: string,\n  args: any[] = []\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    const worker = new Worker(\"./core-mt/worker.js\");\n    worker.postMessage({ command, args });\n    worker.onmessage = (event) => {\n      const { status, result, message, percent, estimatedRemainingTime } =\n        event.data;\n\n      if (status === \"error\") {\n        reject(message);\n      } else if (status === \"progress\") {\n        updateProgress(percent, estimatedRemainingTime);\n      } else {\n        resolve(result);\n      }\n    };\n  });\n}\n\nconst fileInput = document.getElementById(\"fileInput\") as HTMLInputElement;\nconst createPackButton = document.getElementById(\n  \"createPackButton\"\n) as HTMLButtonElement;\nconst progressBar = document.getElementById(\"progress\") as HTMLDivElement;\nconst timeRemainingDisplay = document.getElementById(\n  \"timeRemaining\"\n) as HTMLDivElement;\nconst statusDisplay = document.getElementById(\"status\") as HTMLDivElement;\n\n// FFmpeg\u306E\u30ED\u30FC\u30C9\u51E6\u7406\nasync function loadFFmpeg() {\n  try {\n    statusDisplay.innerText = \"Loading FFmpeg...\";\n    await sendWorkerCommand(\"load\");\n    statusDisplay.innerText = \"FFmpeg loaded.\";\n  } catch (error) {\n    statusDisplay.innerText = \"Error loading FFmpeg.\";\n    console.error(\"Error loading FFmpeg:\", error);\n  }\n}\n\n// \u30D1\u30C3\u30AF\u751F\u6210\u51E6\u7406\nasync function createBPandRP(file: File, frameCount: number, fps: number) {\n  statusDisplay.innerText = \"Creating BP and RP...\";\n\n  const inputFileData = new Uint8Array(await file.arrayBuffer());\n\n  await sendWorkerCommand(\"createPack\", [inputFileData, frameCount, fps]);\n\n  const result = await sendWorkerCommand<Blob>(\"getPack\");\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.href = URL.createObjectURL(result);\n  downloadLink.download = \"generated_pack.mcaddon\";\n  downloadLink.click();\n\n  statusDisplay.innerText = \"Pack creation complete!\";\n}\n\n// \u30DC\u30BF\u30F3\u30A4\u30D9\u30F3\u30C8\ncreatePackButton.addEventListener(\"click\", async () => {\n  const file = fileInput.files?.[0];\n  if (!file) {\n    alert(\"Please select a video file.\");\n    return;\n  }\n\n  const frameCount = parseInt(\n    (document.getElementById(\"frameCount\") as HTMLInputElement).value\n  );\n  const fps = parseInt(\n    (document.getElementById(\"fps\") as HTMLInputElement).value\n  );\n\n  try {\n    await createBPandRP(file, frameCount, fps);\n  } catch (error) {\n    statusDisplay.innerText = \"Error during pack creation.\";\n    console.error(\"Error during pack creation:\", error);\n  }\n});\n\n// \u9032\u6357\u30D0\u30FC\u3084\u6B8B\u308A\u6642\u9593\u306E\u66F4\u65B0\nfunction updateProgress(percent: number, estimatedRemainingTime: number) {\n  progressBar.style.width = `${percent}%`;\n  timeRemainingDisplay.innerText = `Estimated Time Left: ${estimatedRemainingTime}s`;\n}\n\n// FFmpeg\u306E\u30ED\u30FC\u30C9\u958B\u59CB\nloadFFmpeg().catch(console.error);\n"],
  "mappings": "8RAAA,IAAAA,EAAAC,EAAAC,GAAA,CACA,SAASC,EACPC,EACAC,EAAc,CAAC,EACH,CACZ,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,IAAMC,EAAS,IAAI,OAAO,qBAAqB,EAC/CA,EAAO,YAAY,CAAE,QAAAJ,EAAS,KAAAC,CAAK,CAAC,EACpCG,EAAO,UAAaC,GAAU,CAC5B,GAAM,CAAE,OAAAC,EAAQ,OAAAC,EAAQ,QAAAC,EAAS,QAAAC,EAAS,uBAAAC,CAAuB,EAC/DL,EAAM,KAEJC,IAAW,QACbH,EAAOK,CAAO,EACLF,IAAW,WACpBK,EAAeF,EAASC,CAAsB,EAE9CR,EAAQK,CAAM,CAElB,CACF,CAAC,CACH,CAEA,IAAMK,EAAY,SAAS,eAAe,WAAW,EAC/CC,EAAmB,SAAS,eAChC,kBACF,EACMC,EAAc,SAAS,eAAe,UAAU,EAChDC,EAAuB,SAAS,eACpC,eACF,EACMC,EAAgB,SAAS,eAAe,QAAQ,EAGtD,SAAeC,GAAa,QAAAC,EAAA,sBAC1B,GAAI,CACFF,EAAc,UAAY,oBAC1B,MAAMjB,EAAkB,MAAM,EAC9BiB,EAAc,UAAY,gBAC5B,OAASG,EAAO,CACdH,EAAc,UAAY,wBAC1B,QAAQ,MAAM,wBAAyBG,CAAK,CAC9C,CACF,GAGA,SAAeC,EAAcC,EAAYC,EAAoBC,EAAa,QAAAL,EAAA,sBACxEF,EAAc,UAAY,wBAE1B,IAAMQ,EAAgB,IAAI,WAAW,MAAMH,EAAK,YAAY,CAAC,EAE7D,MAAMtB,EAAkB,aAAc,CAACyB,EAAeF,EAAYC,CAAG,CAAC,EAEtE,IAAMhB,EAAS,MAAMR,EAAwB,SAAS,EAChD0B,EAAe,SAAS,cAAc,GAAG,EAC/CA,EAAa,KAAO,IAAI,gBAAgBlB,CAAM,EAC9CkB,EAAa,SAAW,yBACxBA,EAAa,MAAM,EAEnBT,EAAc,UAAY,yBAC5B,GAGAH,EAAiB,iBAAiB,QAAS,IAAYK,EAAApB,EAAA,iBA/DvD,IAAA4B,EAgEE,IAAML,GAAOK,EAAAd,EAAU,QAAV,YAAAc,EAAkB,GAC/B,GAAI,CAACL,EAAM,CACT,MAAM,6BAA6B,EACnC,MACF,CAEA,IAAMC,EAAa,SAChB,SAAS,eAAe,YAAY,EAAuB,KAC9D,EACMC,EAAM,SACT,SAAS,eAAe,KAAK,EAAuB,KACvD,EAEA,GAAI,CACF,MAAMH,EAAcC,EAAMC,EAAYC,CAAG,CAC3C,OAASJ,EAAO,CACdH,EAAc,UAAY,8BAC1B,QAAQ,MAAM,8BAA+BG,CAAK,CACpD,CACF,EAAC,EAGD,SAASR,EAAeF,EAAiBC,EAAgC,CACvEI,EAAY,MAAM,MAAQ,GAAGL,CAAO,IACpCM,EAAqB,UAAY,wBAAwBL,CAAsB,GACjF,CAGAO,EAAW,EAAE,MAAM,QAAQ,KAAK",
  "names": ["require_main", "__commonJSMin", "exports", "sendWorkerCommand", "command", "args", "resolve", "reject", "worker", "event", "status", "result", "message", "percent", "estimatedRemainingTime", "updateProgress", "fileInput", "createPackButton", "progressBar", "timeRemainingDisplay", "statusDisplay", "loadFFmpeg", "__async", "error", "createBPandRP", "file", "frameCount", "fps", "inputFileData", "downloadLink", "_a"]
}
