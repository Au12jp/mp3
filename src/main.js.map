{
  "version": 3,
  "sources": ["main.ts"],
  "sourcesContent": ["import { fetchFile } from \"@ffmpeg/util\";\nimport { WorkerCommand, WorkerMessage } from \"./core-mt/worker\";\n\nconst worker = new Worker(\"./core-mt/worker.js\");\n\nfunction sendWorkerCommand<T = any>(\n  command: WorkerCommand,\n  args: any[] = []\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    worker.postMessage({ command, args } as WorkerMessage);\n    worker.onmessage = (event) => {\n      if (event.data.status === \"error\") {\n        reject(event.data.message);\n      } else if (event.data.status === \"progress\") {\n        const { percent, estimatedRemainingTime } = event.data;\n        progressBar.style.width = `${percent}%`;\n        timeRemainingDisplay.innerText = `Estimated Time Left: ${estimatedRemainingTime}s`;\n      } else {\n        resolve(event.data.result);\n      }\n    };\n  });\n}\nconst fileInput = document.getElementById(\"fileInput\") as HTMLInputElement;\nconst createPackButton = document.getElementById(\n  \"createPackButton\"\n) as HTMLButtonElement;\nconst progressBar = document.getElementById(\"progress\") as HTMLDivElement;\nconst timeRemainingDisplay = document.getElementById(\n  \"timeRemaining\"\n) as HTMLDivElement;\nconst statusDisplay = document.getElementById(\"status\") as HTMLDivElement;\n\n// FFmpeg\u306E\u30ED\u30FC\u30C9\u51E6\u7406\nasync function loadFFmpeg() {\n  try {\n    statusDisplay.innerText = \"Loading FFmpeg...\";\n    await sendWorkerCommand(\"load\");\n    statusDisplay.innerText = \"FFmpeg loaded.\";\n  } catch (error) {\n    statusDisplay.innerText = \"Error loading FFmpeg.\";\n    console.error(\"Error loading FFmpeg:\", error);\n  }\n}\n\n// \u30D1\u30C3\u30AF\u751F\u6210\u51E6\u7406\nasync function createBPandRP(file: File, frameCount: number, fps: number) {\n  statusDisplay.innerText = \"Creating BP and RP...\";\n\n  const inputFileData = new Uint8Array(await file.arrayBuffer());\n\n  await sendWorkerCommand(\"createPack\", [inputFileData, frameCount, fps]);\n\n  const result = await sendWorkerCommand<Blob>(\"getPack\");\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.href = URL.createObjectURL(result);\n  downloadLink.download = \"generated_pack.mcaddon\";\n  downloadLink.click();\n\n  statusDisplay.innerText = \"Pack creation complete!\";\n}\n\n// \u30DC\u30BF\u30F3\u30A4\u30D9\u30F3\u30C8\ncreatePackButton.addEventListener(\"click\", async () => {\n  const file = fileInput.files?.[0];\n  if (!file) {\n    alert(\"Please select a video file.\");\n    return;\n  }\n\n  const frameCount = parseInt(\n    (document.getElementById(\"frameCount\") as HTMLInputElement).value\n  );\n  const fps = parseInt(\n    (document.getElementById(\"fps\") as HTMLInputElement).value\n  );\n\n  try {\n    await createBPandRP(file, frameCount, fps);\n  } catch (error) {\n    statusDisplay.innerText = \"Error during pack creation.\";\n    console.error(\"Error during pack creation:\", error);\n  }\n});\n\n// \u9032\u6357\u30D0\u30FC\u3084\u6B8B\u308A\u6642\u9593\u306E\u66F4\u65B0\nfunction updateProgress(percent: number, estimatedRemainingTime: number) {\n  progressBar.style.width = `${percent}%`;\n  timeRemainingDisplay.innerText = `Estimated Time Left: ${estimatedRemainingTime}s`;\n}\n\n// FFmpeg\u306E\u30ED\u30FC\u30C9\u958B\u59CB\nloadFFmpeg().catch(console.error);\n"],
  "mappings": "8RAAA,IAAAA,EAAAC,EAAAC,GAAA,CAGA,IAAMC,EAAS,IAAI,OAAO,qBAAqB,EAE/C,SAASC,EACPC,EACAC,EAAc,CAAC,EACH,CACZ,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtCL,EAAO,YAAY,CAAE,QAAAE,EAAS,KAAAC,CAAK,CAAkB,EACrDH,EAAO,UAAaM,GAAU,CAC5B,GAAIA,EAAM,KAAK,SAAW,QACxBD,EAAOC,EAAM,KAAK,OAAO,UAChBA,EAAM,KAAK,SAAW,WAAY,CAC3C,GAAM,CAAE,QAAAC,EAAS,uBAAAC,CAAuB,EAAIF,EAAM,KAClDG,EAAY,MAAM,MAAQ,GAAGF,CAAO,IACpCG,EAAqB,UAAY,wBAAwBF,CAAsB,GACjF,MACEJ,EAAQE,EAAM,KAAK,MAAM,CAE7B,CACF,CAAC,CACH,CACA,IAAMK,EAAY,SAAS,eAAe,WAAW,EAC/CC,EAAmB,SAAS,eAChC,kBACF,EACMH,EAAc,SAAS,eAAe,UAAU,EAChDC,EAAuB,SAAS,eACpC,eACF,EACMG,EAAgB,SAAS,eAAe,QAAQ,EAGtD,SAAeC,GAAa,QAAAC,EAAA,sBAC1B,GAAI,CACFF,EAAc,UAAY,oBAC1B,MAAMZ,EAAkB,MAAM,EAC9BY,EAAc,UAAY,gBAC5B,OAASG,EAAO,CACdH,EAAc,UAAY,wBAC1B,QAAQ,MAAM,wBAAyBG,CAAK,CAC9C,CACF,GAGA,SAAeC,EAAcC,EAAYC,EAAoBC,EAAa,QAAAL,EAAA,sBACxEF,EAAc,UAAY,wBAE1B,IAAMQ,EAAgB,IAAI,WAAW,MAAMH,EAAK,YAAY,CAAC,EAE7D,MAAMjB,EAAkB,aAAc,CAACoB,EAAeF,EAAYC,CAAG,CAAC,EAEtE,IAAME,EAAS,MAAMrB,EAAwB,SAAS,EAChDsB,EAAe,SAAS,cAAc,GAAG,EAC/CA,EAAa,KAAO,IAAI,gBAAgBD,CAAM,EAC9CC,EAAa,SAAW,yBACxBA,EAAa,MAAM,EAEnBV,EAAc,UAAY,yBAC5B,GAGAD,EAAiB,iBAAiB,QAAS,IAAYG,EAAAhB,EAAA,iBAhEvD,IAAAyB,EAiEE,IAAMN,GAAOM,EAAAb,EAAU,QAAV,YAAAa,EAAkB,GAC/B,GAAI,CAACN,EAAM,CACT,MAAM,6BAA6B,EACnC,MACF,CAEA,IAAMC,EAAa,SAChB,SAAS,eAAe,YAAY,EAAuB,KAC9D,EACMC,EAAM,SACT,SAAS,eAAe,KAAK,EAAuB,KACvD,EAEA,GAAI,CACF,MAAMH,EAAcC,EAAMC,EAAYC,CAAG,CAC3C,OAASJ,EAAO,CACdH,EAAc,UAAY,8BAC1B,QAAQ,MAAM,8BAA+BG,CAAK,CACpD,CACF,EAAC,EASDF,EAAW,EAAE,MAAM,QAAQ,KAAK",
  "names": ["require_main", "__commonJSMin", "exports", "worker", "sendWorkerCommand", "command", "args", "resolve", "reject", "event", "percent", "estimatedRemainingTime", "progressBar", "timeRemainingDisplay", "fileInput", "createPackButton", "statusDisplay", "loadFFmpeg", "__async", "error", "createBPandRP", "file", "frameCount", "fps", "inputFileData", "result", "downloadLink", "_a"]
}
